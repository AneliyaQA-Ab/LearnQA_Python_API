{"name": "test_delete_other_user", "status": "failed", "statusDetails": {"message": "AssertionError: Response JSON doesn't have key 'id'", "trace": "self = <HW_Lesson4_Ex18.TestUserDelete object at 0x102d20d10>\n\n    @allure.description(\"This test try delete other user\")\n    def test_delete_other_user(self):\n        # REGISTER\n    \n        register_data = self.prepare_registration_data()\n        response7 = MyRequests.post(\"/user\", data=register_data)\n    \n    \n    \n        email = register_data['email']\n        firstName = register_data['firstName']\n        password =  register_data['password']\n        user_id = self.get_json_value(response7, \"id\")\n    \n    \n        # LOGIN & GET\n    \n        login_data = {\n            'email': email,\n            'password': password\n        }\n    \n        response7 = MyRequests.post(\"/user/login\", data=login_data)\n    \n        auth_sid = self.get_cookie(response7, \"auth_sid\")\n        token = self.get_header(response7, \"x-csrf-token\")\n    \n        print(token)\n        print(auth_sid)\n    \n        Assertions.assert_code_status(response7, 200)\n>       Assertions.assert_json_has_key(response7, \"id\")\n\ntests/HW_Lesson4_Ex18.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, name = 'id'\n\n    @staticmethod\n    def assert_json_has_key(response: Response, name):\n        try:\n            response_as_dict = response.json()\n        except json.JSONDecodeError:\n            assert False, f\"Response is not in JSON format. Response text is '{response.text}'\"\n    \n>       assert name in response_as_dict, f\"Response JSON doesn't have key '{name }'\"\nE       AssertionError: Response JSON doesn't have key 'id'\n\nlib/assertions.py:21: AssertionError"}, "description": "This test try delete other user", "steps": [{"name": "POST request to URL /user", "status": "passed", "start": 1689856625219, "stop": 1689856625840}, {"name": "POST request to URL /user/login", "status": "passed", "start": 1689856625840, "stop": 1689856625961}], "attachments": [{"name": "stdout", "source": "f43bcf59-8d22-4af6-b3bb-60efe9f4cf6d-attachment.txt", "type": "text/plain"}], "start": 1689856625219, "stop": 1689856625962, "uuid": "8ac1c51e-2768-43a4-b7c9-0045ef486921", "historyId": "2c055e49c8f156ae7e7bd6266af7f72e", "testCaseId": "e227d0d21cacb522cdb592378ea4a0db", "fullName": "tests.HW_Lesson4_Ex18.TestUserDelete#test_delete_other_user", "labels": [{"name": "epic", "value": "Remove cases"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "HW_Lesson4_Ex18"}, {"name": "subSuite", "value": "TestUserDelete"}, {"name": "host", "value": "MacBook-Air-Anelia.local"}, {"name": "thread", "value": "5699-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.HW_Lesson4_Ex18"}]}