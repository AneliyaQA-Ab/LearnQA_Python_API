{"name": "test_delete_other_user", "status": "failed", "statusDetails": {"message": "AssertionError: Response JSON doesn't have key 'id'", "trace": "self = <HW_Lesson4_Ex18.TestUserDelete object at 0x1049acd10>\n\n    @allure.description(\"This test try delete other user\")\n    def test_delete_other_user(self):\n        # REGISTER\n    \n        register_data = self.prepare_registration_data()\n        response7 = MyRequests.post(\"/user\", data=register_data)\n    \n    \n    \n        email = register_data['email']\n        firstName = register_data['firstName']\n        password =  register_data['password']\n        user_id = self.get_json_value(response7, \"id\")\n    \n    \n        # LOGIN & GET\n    \n        login_data = {\n            'email': email,\n            'password': password\n        }\n    \n        response7 = MyRequests.post(\"/user/login\", data=login_data)\n    \n        auth_sid = self.get_cookie(response7, \"auth_sid\")\n        token = self.get_header(response7, \"x-csrf-token\")\n    \n        print(token)\n        print(auth_sid)\n    \n        Assertions.assert_code_status(response7, 200)\n        #Assertions.assert_json_has_key(response7, \"id\")\n    \n>       user_id = self.get_json_value(response7, \"id\")\n\ntests/HW_Lesson4_Ex18.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <HW_Lesson4_Ex18.TestUserDelete object at 0x1049acd10>, response = <Response [200]>, name = 'id'\n\n    def get_json_value(self, response: Response, name):\n        try:\n            response_as_dict = response.json()\n        except json.decoder.JSONDecodeError:\n            assert False, f\"Response is not in JSON format. Response text is  '{response.text}'\"\n    \n>       assert name in response_as_dict, f\"Response JSON doesn't have key '{name}'\"\nE       AssertionError: Response JSON doesn't have key 'id'\n\nlib/base_case.py:21: AssertionError"}, "description": "This test try delete other user", "steps": [{"name": "POST request to URL /user", "status": "passed", "start": 1689857205861, "stop": 1689857206482}, {"name": "POST request to URL /user/login", "status": "passed", "start": 1689857206482, "stop": 1689857206619}], "attachments": [{"name": "stdout", "source": "73129a74-20c8-4d71-b7d3-12b04b205e9f-attachment.txt", "type": "text/plain"}], "start": 1689857205861, "stop": 1689857206620, "uuid": "e1c31e19-0b45-4f4d-94ad-4794dde24bc3", "historyId": "2c055e49c8f156ae7e7bd6266af7f72e", "testCaseId": "e227d0d21cacb522cdb592378ea4a0db", "fullName": "tests.HW_Lesson4_Ex18.TestUserDelete#test_delete_other_user", "labels": [{"name": "epic", "value": "Remove cases"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "HW_Lesson4_Ex18"}, {"name": "subSuite", "value": "TestUserDelete"}, {"name": "host", "value": "MacBook-Air-Anelia.local"}, {"name": "thread", "value": "5798-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.HW_Lesson4_Ex18"}]}